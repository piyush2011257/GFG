Bipartite Matching
Maximal Matching
Vertex / Edge Cover
Manacher Algorithm
Segment Tree
Suffix Array

Design Problems
-> ELEVATOR
-> SNAKES AND LADDERS
-> FILE SYSTEM IN LINUX
-> PARKING LOT PROBLEM
-> DECK OF CARDS AND SHUFFLING
-> DESIGN CAB SYSTEM

-> Operating System
	Process
	Memory
	File
-> RHEL Administration
-> Computer Networking
-> Virtualization / SDN / NV


Cracking Programming Interviews: 500 Questions With Solutions

Part I Algorithms and Data Structures 

1 Fundamentals
Approximating the square root of a number 
Generating Permutation
Efficiently Unique 5-bit Sequences 
Select Kth Smallest Element 
The Non-Crooks Problem 
Is this (almost) sorted? 
Sorting an almost sorted list
The Longest Upsequence Problem 
Fixed size generic array in C++ 
Seating Problem 
Segment Problems
Exponentiation 
Searching two-dimensional sorted array
Hamming Problem
Constant Time Range Query 
Linear Time Sorting
Writing a Value as the Sum of Squares 
The Celebrity Problem 
Transport Problem 
Find Length of the rope 
Switch Bulb Problem
In, On or Out 
The problem of the balanced seg 
The problem of the most isolated villages 

2 Arrays
The Plateau Problem
Searching in Two Dimensional Sequence
The Welfare Crook Problem
2D Array Rotation
A Queuing Problem in A Post Office
Interpolation Search 
Robot Walk 
Linear Time Sorting 
Write as sum of consecutive positive numbers 
Print 2D Array in Spiral Order 
The Problem of the Circular Racecourse 
Sparse Array 
Trick Bultermans 
Reshuffling Problem 
Finding the majority Mode of a Multiset Circular Array 
Find Median of two sorted arrays 
Finding the missing integer 
Finding the missing number with sorted columns 
Re-arranging an array 
Switch and Bulb Problem 
Compute sum of sub-array 
Find a number not sum of subsets of array
Kth Smallest Element in Two Sorted Arrays
Sort a sequence of sub-sequences 
Find missing integer 
Inplace Reversing
Find the number not occurring twice in an array

3 Trees
Lowest Common Ancestor(LCA) Problem 
Spying Campaign 

4 Dynamic Programming
Stage Coach Problem 
Matrix Multiplication 
TSP Problem
A Simple Path Problem 
String Edit Distance 
Music recognition 
Max Sub-Array Problem 

5 Graphs 
Reliable distribution 
Independent Set 
Party Problem 

6 Miscellaneous Compute
Next Higher Number 
Searching in Possibly Empty Two Dimensional Sequence 
Matching Nuts and Bolts Optimally
Random-number generation 
Weighted Median Compute 
a^n Compute 
a^n revisited 
Compute the product a b 
Compute the quotient and remainder
Compute GCD 
Computed Constrained GCD 
Alternative Euclid Algorithm 
Revisit Constrained GCD
Compute Square using only addition and subtraction 
Factorization 
Factorization Revisited 
Decimal Representation
Reverse Decimal Representation
Solve Inequality 
Solve Inequality Revisited 
Print Decimal Representation 
Decimal Period Length
Sequence Periodicity Problem 
Compute Function
Emulate Division and Modulus Operations
Sorting Array of Strings 
Linear Time LRU data structure 
Exchange Prefix and Suffix 

7 Parallel Algorithms 
Parallel Addition
Find Maximum
Parallel Prefix
Problem Finding Ranks in Linked Lists
Finding the k th Smallest Element 

8 Low Level Algorithms 
Manipulating Rightmost Bits
Counting 1-Bits 
Counting the 1-bits in an Array
Computing Parity of a word
Counting Leading/Trailing 0s
Bit Reversal Bit
Shuffling
Integer Square Root Newtons Method
Integer Exponentiation
LRU Algorithm 
Shortest String of 1-Bits Fibonacci words
Computation of Power of 2 
Round to a known power of 2 
Round to Next Power of 2 
Efficient Multiplication by Constants Bit-wise Rotation 
Gray Code Conversion 
Average of Integers without Overflow 
Least/Most Significant 1 Bit Next bit Permutation
Modulus
Division 

Part II C++
8 General
9 Constant Expression
10 Type Specifier 
11 Namespaces 
12 Misc 
13 Classes 
14 Templates 
15 Standard Library


http://www.amazon.jobs/jobs/302117/software-development-engineer
http://www.amazon.jobs/results?locationIds[]=177&locationIds[]=8226&locationIds[]=8224&locationIds[]=176&locationIds[]=8225
http://www.amazon.jobs/jobs/274673/software-development-engineer
http://www.amazon.jobs/jobs/271468/software-development-engineer
http://www.amazon.jobs/jobs/271706/software-development-engineer
http://www.amazon.jobs/jobs/263717/software-developer
http://www.amazon.jobs/jobs/256004/software-development-engineer
http://www.amazon.jobs/jobs/218253/software-development-engineer
http://www.amazon.jobs/jobs/230627/software-development-engineer

173
Q2: Given Two sorted array of size size n each. Find the Kth largest element in these two array (Expected Time Complexity Log(n))
http://leetcode.com/2011/01/find-k-th-smallest-element-in-union-of.html
http://www.programcreek.com/2012/12/leetcode-median-of-two-sorted-arrays-java/
http://leetcode.com/2011/03/median-of-two-sorted-arrays.html#comment-1053
http://www.geeksforgeeks.org/median-of-two-sorted-arrays-of-different-sizes/

http://www.quora.com/Given-two-sorted-lists-of-size-m-and-n-what-is-the-fastest-algorithm-for-computing-the-kth-smallest-element-in-the-union-of-the-two-lists
nother solution that does log k comparisons:

Compare the 2 middle elements.
Assume A[k/2] < B[k/2].
Reduce the problem to finding the k/2th element in A[k/2:] and B[0:k/2].

Ben's solution might take 2 log k comparisons.

Clearly, only the first k elements of each list (M and N) are relevant, so the remaining elements can be ignored.

